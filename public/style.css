body
{
	background-color:  #0C0C0C;
	/*
		If you change this, then you have to also recolor the bottle image. Otherwise you'll see
		the box I put around the bottle to create a cool illusion.
	*/
}

.left-side-container {
	display: inline-block;
	margin-top: -100px;
	max-width: 310px;
	min-width: 300px;
}

.healthDisplay
/*
These are the health bottle and the stats. The health bottle is in two parts: the "liquid" inside
and a bottle png with a transparent window to show the "liquid". The box for the health can be
edited by increasing the height and decreasing the margin by the same amount.

This can be changed to a level liquid, or another bottle can be added for level. But that's
your funeral xox.
*/
{
	top: 0px;
	position: fixed;
	display: inline-flex;
	margin-top: -30px;
	max-width: 310px;
	min-width: 300px;
}

.health {
	display: inline-flex;
	align-items: flex-end;
	width: 130px;
	height: 150px;
	margin-top: 0px;

}

.health-bar
{
	top: 45px;
	position: absolute;
	height: 25px;
	width: 100px;
	background-color: #50021B;
	margin-left: 30px;
	margin-top: 125px;
}

.hp-bottle
{
	top: 45px;
	position: absolute;
	margin-left: 25px;
}

.hp-bottle img
{
	position: absolute;
	height: 150px;
	width: auto;
}

.stats
{
	font-family: Crimson Pro;
	font-size: 15px;
	text-align: left;
	background-color: white;
	width: 100px;
	height: 100px;
	padding: 5px;
	border: 5px black solid;
	display: inline-flex;
	flex-wrap: wrap;
	margin-left: 15px;
	margin-top: 50px;
}

/*
	The stats themselves are below. They should be able to be changed. Probably by being
	made into variables. Remember, the health variable should also change the liquid in
	the bottle.
*/

.level
{
	font-weight: 100px;
	width: 120px;
}

.healthStat
{
	width: 120px;
}

.energyStat
{
	width: 120px;
}

.healthModifier
{
	width: 120px;
}

.energyModifier
{
	width: 120px;
}

.calendar
/*
	This is the calendar graphic! It should be changed monthly, but we're turning this in once.
*/
{
	width: 300px;
	height: 220px;
	border: 5px black solid;
	margin-bottom: 30px;
	display: inline-block;
	margin-top: 30px;
}

.calendar img
{
	width: 300px;
	height: 220px;
}

.miscTasks
/*
	These are the tasks! They should be editable and add points. Just being editable should be
	enough, however.
*/
{
	width: 300px;
	height: 400px;
	background-color: white;
	border: 5px black solid;
	border-radius: 5px;
	text-align: center;
	position: relative;
}

.miscTasks img
/*
	The rad texture image. Don't look at it for too long.
*/
{
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	opacity: 0.6;
}

.miscTasks h1
{
	font-family: Crimson Pro;
	position: relative;
	margin: auto;
	vertical-align: middle;
	font-size: 46px;
	z-index: 2;
}

.middle-container
{
	display: inline-block;
	margin-left: 50px;
	max-width: 800px;
	min-width: 650px;
}

.dailyTasks
/*
	The user's daily tasks! These should also be editable, but clear after the day is over.
	They should also be sorted by time. (From the earliest to the latest).
	Using getTime() and subtracting the current time from 24 hours might be a way to make 
	something display until midnight, and simply comparing the time variables might be a way
	to find out which task is earlier.

*/
{
	height: 700px;
	max-width: 800px;
	min-width: 650px;
	background-color: white;
	font-family: Crimson Pro;
	border: 5px black solid;
	overflow: hidden;
	border-radius: 5px;
	display: inline-block;	
	position: relative;
	text-align: center;
}

.dailyTasks img {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	opacity: 0.6;
}

.dailyTasks h1
{
	position: relative;
	margin: auto;
	vertical-align: middle;
	font-size: 46px;
	z-index: 2;
}

.task
/*
	These are the actual task bars.
*/ 
{
	text-align: left;
	padding-left: 15px;
	color: white;
	position: relative;
	max-width: 80%;
	margin-right: 15px;
	margin-left: 15%;
	background-color: #872359;
	border-radius: 50px;
	z-index: 2;
	margin-top: 15px;
}

.right-side-container
{
	display: inline-block;
	min-width: 320px;
	margin-left: 10px;
	vertical-align: top;
}

.elf-container
/*
	PLEASE don't move this. It's the elf but he is so very hard to place.
*/
{
	position: relative;
}

.elf {
	position: absolute;
	margin-top: 100px;
	height: 600px;
	width: auto;
}

.elf img {
	position: absolute;
	height: 600px;
	width: auto;
}

@media only screen and (max-width: 1420px)
/*
	Makes the elf and text bubble disappear when he goes offscreen.
*/
{
	.right-side-container
	{
		opacity: 0;
	}
}

.normalElf:hover
{
	opacity: 0;
}

.dialogue-container
{
	position: relative;
	left: 50px;
	text-align: center;
	width: 300px;
}

.bubble
{
	width: 100%;
	height: auto;
}

/*
	All of the below is the potential dialogue. Technically, they should require conditions
	to trigger, but if you can't do that, delete everything except the greeting. It's our
	secret.
*/

#greetings
{
	position: absolute;
	top: 28%;
	left: 50%;
	transform: translate(-50%, -50%);

}

#goodDay 
{
	position: absolute;
	top: 60px;
	transform: translate(-50%, -50%);
	font-size: 13px;
}

#badDay
{
	position: absolute;
	top: 60px;
	transform: translate(-50%, -50%);
	font-size: 13px;
}

#lowEnergy
{
	position: absolute;
	top: 60px;
	transform: translate(-50%, -50%);
	font-size: 13px;
}

#catAttack
{
	position: absolute;
	top: 60px;
	transform: translate(-50%, -50%);
	font-size: 13px;
}

.hidden {
	display: none;
	visibility: hidden;
}